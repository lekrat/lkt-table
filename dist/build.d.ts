declare class F {
    constructor(t?: string, s?: string);
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable(t?: boolean): this;
    setIsEditable(t?: boolean): this;
    editable: boolean | undefined;
    setIsHidden(t?: boolean): this;
    setIsLoading(t?: boolean): this;
    setFormatter(t?: undefined): this;
    formatter: any;
    setEmptyChecker(t?: undefined): this;
    checkEmpty: any;
    setColSpan(t?: undefined): this;
    colspan: any;
    setPreferSlot(t?: boolean): this;
    getHref(t: any): any;
    doAction(t: any): any;
    defineAsLink(t: any): this;
    type: string | undefined;
    link: any;
    defineAsText(): this;
    defineAsEmail(): this;
    defineAsTel(): this;
    defineAsInteger(): this;
    defineAsFloat(): this;
    defineAsCheck(): this;
    defineAsSwitch(): this;
    defineAsFile(): this;
    defineAsAction(t: any): this;
    action: any;
    defineAsSelect(t: any): this;
    options: any;
    showLoading(): boolean;
    hasToLoadResource(): boolean;
    setIsMultiple(t?: boolean): this;
    setResource(t: any): this;
    setResourceSlot(t: any): this;
    resourceSlot: any;
    setResourceData(t: any): this;
    loadResource(): Promise<this>;
    setEditSlot(t: any): this;
    setValueSlot(t: any): this;
    setMultipleDisplay(t: any): this;
    setMultipleDisplayToList(): this;
    setMultipleDisplayToInline(): this;
    setMultipleDisplayToCount(): this;
    setMultipleDisplayEdition(t: any): this;
    setMultipleDisplayEditionToList(): this;
    setMultipleDisplayEditionToInline(): this;
    setSlotData(t: any): this;
    slotData: any;
    setAutoLoadSelectOptions(t?: boolean, s?: string): this;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode(t?: boolean): this;
    tags: boolean | undefined;
    setOptions(t?: any[]): this;
    setTitleSourceColumn(t: any): this;
    extractTitleFromColumn: any;
    useForRowKey(t?: boolean): this;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue(t?: boolean): this;
    equivalentToSelectValue: boolean | undefined;
}
declare function Al(l: any, t: any, s: any, n?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Hl(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function $l(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Nl(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function ql(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Ol(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function jl(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Ul(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Rl(l: any, t: any, s: any, n?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Kl(l: any, t: any, s: any, n?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Pl(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Wl(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare function Fl(l: any, t: any, s?: boolean): {
    preferSlot: boolean;
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (t?: boolean) => F;
    setIsEditable: (t?: boolean) => F;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => F;
    setIsLoading: (t?: boolean) => F;
    setFormatter: (t?: undefined) => F;
    formatter: any;
    setEmptyChecker: (t?: undefined) => F;
    checkEmpty: any;
    setColSpan: (t?: undefined) => F;
    colspan: any;
    setPreferSlot: (t?: boolean) => F;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => F;
    type: string | undefined;
    link: any;
    defineAsText: () => F;
    defineAsEmail: () => F;
    defineAsTel: () => F;
    defineAsInteger: () => F;
    defineAsFloat: () => F;
    defineAsCheck: () => F;
    defineAsSwitch: () => F;
    defineAsFile: () => F;
    defineAsAction: (t: any) => F;
    action: any;
    defineAsSelect: (t: any) => F;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => F;
    setResource: (t: any) => F;
    setResourceSlot: (t: any) => F;
    resourceSlot: any;
    setResourceData: (t: any) => F;
    loadResource: () => Promise<F>;
    setEditSlot: (t: any) => F;
    setValueSlot: (t: any) => F;
    setMultipleDisplay: (t: any) => F;
    setMultipleDisplayToList: () => F;
    setMultipleDisplayToInline: () => F;
    setMultipleDisplayToCount: () => F;
    setMultipleDisplayEdition: (t: any) => F;
    setMultipleDisplayEditionToList: () => F;
    setMultipleDisplayEditionToInline: () => F;
    setSlotData: (t: any) => F;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, s?: string) => F;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => F;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => F;
    setTitleSourceColumn: (t: any) => F;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => F;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => F;
    equivalentToSelectValue: boolean | undefined;
};
declare namespace Gl {
    function install(l: any): void;
}
declare function Ql(l: any): boolean;
declare function Jl(l: any): boolean;
declare function zl(l: any): boolean;
export { F as LktTableColumn, Al as createActionColumn, Hl as createCheckColumn, $l as createColumn, Nl as createEmailColumn, ql as createFileColumn, Ol as createFloatColumn, jl as createHiddenColumn, Ul as createIntegerColumn, Rl as createLinkColumn, Kl as createSelectColumn, Pl as createSwitchColumn, Wl as createTelColumn, Fl as createTextColumn, Gl as default, Ql as setTableCreateButtonSlot, Jl as setTableDropButtonSlot, zl as setTableNavButtonSlot };
