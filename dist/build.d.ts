declare class M {
    constructor(o?: string, i?: string);
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: Pe;
    setIsHidden(o?: boolean): this;
    setFormatter(o?: undefined): this;
    formatter: any;
    setEmptyChecker(o?: undefined): this;
    checkEmpty: any;
    setColSpan(o?: undefined): this;
    colspan: any;
    getHref(o: any): any;
    doAction(o: any): any;
}
declare function Dl(t: any, o: any, i: any, a?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Ml(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function wl(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Rl(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Ul(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function $l(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Al(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Tl(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function El(t: any, o: any, i: any, a?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Nl(t: any, o: any, i: any, a?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Fl(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Ll(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare function Il(t: any, o: any, i?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    editable: boolean;
    preferSlot: boolean;
    type: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    setIsHidden: (o?: boolean) => M;
    setFormatter: (o?: undefined) => M;
    formatter: any;
    setEmptyChecker: (o?: undefined) => M;
    checkEmpty: any;
    setColSpan: (o?: undefined) => M;
    colspan: any;
    getHref: (o: any) => any;
    doAction: (o: any) => any;
};
declare namespace Pl {
    function install(t: any): void;
}
declare function Kl(t: any): boolean;
declare function Wl(t: any): boolean;
declare function jl(t: any): void;
declare function Hl(t: any): boolean;
import { Field as Pe } from "lkt-field";
export { M as LktTableColumn, Dl as createActionColumn, Ml as createCheckColumn, wl as createColumn, Rl as createEmailColumn, Ul as createFileColumn, $l as createFloatColumn, Al as createHiddenColumn, Tl as createIntegerColumn, El as createLinkColumn, Nl as createSelectColumn, Fl as createSwitchColumn, Ll as createTelColumn, Il as createTextColumn, Pl as default, Kl as setTableCreateButtonSlot, Wl as setTableDropButtonSlot, jl as setTableEmptySlot, Hl as setTableNavButtonSlot };
