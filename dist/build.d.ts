declare class H {
    constructor(e?: string, u?: string);
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable(e?: boolean): this;
    setIsEditable(e?: boolean): this;
    editable: boolean | undefined;
    setIsHidden(e?: boolean): this;
    setIsLoading(e?: boolean): this;
    setFormatter(e?: undefined): this;
    formatter: any;
    setEmptyChecker(e?: undefined): this;
    checkEmpty: any;
    setColSpan(e?: undefined): this;
    getHref(e: any): any;
    doAction(e: any): any;
    defineAsLink(e: any): this;
    type: string | undefined;
    link: any;
    defineAsText(): this;
    defineAsEmail(): this;
    defineAsTel(): this;
    defineAsInt(): this;
    defineAsFloat(): this;
    defineAsCheck(): this;
    defineAsSwitch(): this;
    defineAsFile(): this;
    defineAsAction(e: any): this;
    action: any;
    defineAsSelect(e: any): this;
    options: any;
    showLoading(): boolean;
    hasToLoadResource(): boolean;
    setIsMultiple(e?: boolean): this;
    setResource(e: any): this;
    setResourceSlot(e: any): this;
    resourceSlot: any;
    setResourceData(e: any): this;
    loadResource(): Promise<this>;
    setEditSlot(e: any): this;
    setValueSlot(e: any): this;
    setMultipleDisplay(e: any): this;
    setMultipleDisplayToList(): this;
    setMultipleDisplayToInline(): this;
    setMultipleDisplayToCount(): this;
    setMultipleDisplayEdition(e: any): this;
    setMultipleDisplayEditionToList(): this;
    setMultipleDisplayEditionToInline(): this;
    setSlotData(e: any): this;
    slotData: any;
    setAutoLoadSelectOptions(e?: boolean, u?: string): this;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode(e?: boolean): this;
    tags: boolean | undefined;
    setOptions(e?: any[]): this;
    setTitleSourceColumn(e: any): this;
    extractTitleFromColumn: any;
    useForRowKey(e?: boolean): this;
    isForRowKey: boolean | undefined;
}
declare function kl(l: any, e: any, u: any, n?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function Sl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function hl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function gl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function wl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function yl(l: any, e: any, u: any, n?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function Dl(l: any, e: any, u: any, n?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function Vl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function Cl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare function bl(l: any, e: any, u?: boolean): {
    key: string;
    label: string;
    sortable: boolean;
    hidden: boolean;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    setIsSortable: (e?: boolean) => H;
    setIsEditable: (e?: boolean) => H;
    editable: boolean | undefined;
    setIsHidden: (e?: boolean) => H;
    setIsLoading: (e?: boolean) => H;
    setFormatter: (e?: undefined) => H;
    formatter: any;
    setEmptyChecker: (e?: undefined) => H;
    checkEmpty: any;
    setColSpan: (e?: undefined) => H;
    getHref: (e: any) => any;
    doAction: (e: any) => any;
    defineAsLink: (e: any) => H;
    type: string | undefined;
    link: any;
    defineAsText: () => H;
    defineAsEmail: () => H;
    defineAsTel: () => H;
    defineAsInt: () => H;
    defineAsFloat: () => H;
    defineAsCheck: () => H;
    defineAsSwitch: () => H;
    defineAsFile: () => H;
    defineAsAction: (e: any) => H;
    action: any;
    defineAsSelect: (e: any) => H;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (e?: boolean) => H;
    setResource: (e: any) => H;
    setResourceSlot: (e: any) => H;
    resourceSlot: any;
    setResourceData: (e: any) => H;
    loadResource: () => Promise<H>;
    setEditSlot: (e: any) => H;
    setValueSlot: (e: any) => H;
    setMultipleDisplay: (e: any) => H;
    setMultipleDisplayToList: () => H;
    setMultipleDisplayToInline: () => H;
    setMultipleDisplayToCount: () => H;
    setMultipleDisplayEdition: (e: any) => H;
    setMultipleDisplayEditionToList: () => H;
    setMultipleDisplayEditionToInline: () => H;
    setSlotData: (e: any) => H;
    slotData: any;
    setAutoLoadSelectOptions: (e?: boolean, u?: string) => H;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (e?: boolean) => H;
    tags: boolean | undefined;
    setOptions: (e?: any[]) => H;
    setTitleSourceColumn: (e: any) => H;
    extractTitleFromColumn: any;
    useForRowKey: (e?: boolean) => H;
    isForRowKey: boolean | undefined;
};
declare namespace Bl {
    function install(l: any): void;
}
declare function Ll(l: any): boolean;
declare function El(l: any): boolean;
declare function Tl(l: any): boolean;
export { H as LktTableColumn, kl as createActionColumn, Sl as createCheckColumn, hl as createColumn, gl as createEmailColumn, wl as createHiddenColumn, yl as createLinkColumn, Dl as createSelectColumn, Vl as createSwitchColumn, Cl as createTelColumn, bl as createTextColumn, Bl as default, Ll as setTableCreateButtonSlot, El as setTableDropButtonSlot, Tl as setTableNavButtonSlot };
