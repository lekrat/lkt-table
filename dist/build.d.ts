declare class $ {
    constructor(t?: string, r?: string);
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: Pe;
    key: string | undefined;
    label: string | undefined;
    setIsSortable(t?: boolean): this;
    setIsEditable(t?: boolean): this;
    editable: boolean | undefined;
    setIsHidden(t?: boolean): this;
    setIsLoading(t?: boolean): this;
    setFormatter(t?: undefined): this;
    formatter: any;
    setEmptyChecker(t?: undefined): this;
    checkEmpty: any;
    setColSpan(t?: undefined): this;
    colspan: any;
    setPreferSlot(t?: boolean): this;
    getHref(t: any): any;
    doAction(t: any): any;
    defineAsLink(t: any): this;
    link: any;
    defineAsText(): this;
    defineAsEmail(): this;
    defineAsTel(): this;
    defineAsInteger(): this;
    defineAsFloat(): this;
    defineAsCheck(): this;
    defineAsSwitch(): this;
    defineAsFile(): this;
    defineAsAction(t: any): this;
    action: any;
    defineAsSelect(t: any): this;
    options: any;
    showLoading(): boolean;
    hasToLoadResource(): boolean;
    setIsMultiple(t?: boolean): this;
    setResource(t: any): this;
    setResourceSlot(t: any): this;
    resourceSlot: any;
    setResourceData(t: any): this;
    loadResource(): Promise<this>;
    setEditSlot(t: any): this;
    setValueSlot(t: any): this;
    setMultipleDisplay(t: any): this;
    setMultipleDisplayToList(): this;
    setMultipleDisplayToInline(): this;
    setMultipleDisplayToCount(): this;
    setMultipleDisplayEdition(t: any): this;
    setMultipleDisplayEditionToList(): this;
    setMultipleDisplayEditionToInline(): this;
    setSlotData(t: any): this;
    slotData: any;
    setAutoLoadSelectOptions(t?: boolean, r?: string): this;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode(t?: boolean): this;
    tags: boolean | undefined;
    setOptions(t?: any[]): this;
    setTitleSourceColumn(t: any): this;
    extractTitleFromColumn: any;
    useForRowKey(t?: boolean): this;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue(t?: boolean): this;
    equivalentToSelectValue: boolean | undefined;
}
declare function Ll(l: any, t: any, r: any, a?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Nl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Vl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function $l(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Pl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Al(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Hl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Rl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Tl(l: any, t: any, r: any, a?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Ul(l: any, t: any, r: any, a?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Kl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Fl(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare function Ml(l: any, t: any, r?: boolean): {
    sortable: boolean;
    hidden: boolean;
    preferSlot: boolean;
    type: string;
    resource: string;
    resourceData: {};
    isMultiple: boolean;
    isLoading: boolean;
    resourceLoaded: boolean;
    valueSlot: string;
    editSlot: string;
    multipleDisplay: string;
    multipleDisplayEdition: string;
    field: {
        modelValue: string;
        type: any;
        placeholder: string;
        searchPlaceholder: string;
        label: string;
        labelIcon: string;
        labelIconAtEnd: boolean;
        name: string;
        autocomplete: boolean;
        disabled: boolean;
        readonly: boolean;
        readMode: boolean;
        allowReadModeSwitch: boolean;
        mandatory: boolean;
        showPassword: boolean;
        canClear: boolean;
        canUndo: boolean;
        canI18n: boolean;
        canStep: boolean;
        mandatoryMessage: string;
        infoMessage: string;
        errorMessage: string;
        step: number;
        enableAutoNumberFix: boolean;
        emptyValueSlot: string;
        slotData: {};
        resource: string;
        resourceData: {};
        validationResourceData: {};
        autoValidation: boolean;
        autoValidationType: string;
        validationStack: string;
        featuredButton: string;
        infoButtonEllipsis: boolean;
        fileName: string;
        customButtonText: string;
        customButtonClass: string;
        options: any[];
        multiple: boolean;
        multipleDisplay: any;
        multipleDisplayEdition: any;
        searchable: boolean;
        autoloadOptionsResource: boolean;
        optionsDownload: string;
        optionsModal: string;
        optionsModalData: {};
        optionsIcon: string;
        optionsResource: string;
        optionsResourceData: {};
        icon: string;
        download: string;
        modal: string;
        modalKey: string;
        modalData: {};
    };
    key: string | undefined;
    label: string | undefined;
    setIsSortable: (t?: boolean) => $;
    setIsEditable: (t?: boolean) => $;
    editable: boolean | undefined;
    setIsHidden: (t?: boolean) => $;
    setIsLoading: (t?: boolean) => $;
    setFormatter: (t?: undefined) => $;
    formatter: any;
    setEmptyChecker: (t?: undefined) => $;
    checkEmpty: any;
    setColSpan: (t?: undefined) => $;
    colspan: any;
    setPreferSlot: (t?: boolean) => $;
    getHref: (t: any) => any;
    doAction: (t: any) => any;
    defineAsLink: (t: any) => $;
    link: any;
    defineAsText: () => $;
    defineAsEmail: () => $;
    defineAsTel: () => $;
    defineAsInteger: () => $;
    defineAsFloat: () => $;
    defineAsCheck: () => $;
    defineAsSwitch: () => $;
    defineAsFile: () => $;
    defineAsAction: (t: any) => $;
    action: any;
    defineAsSelect: (t: any) => $;
    options: any;
    showLoading: () => boolean;
    hasToLoadResource: () => boolean;
    setIsMultiple: (t?: boolean) => $;
    setResource: (t: any) => $;
    setResourceSlot: (t: any) => $;
    resourceSlot: any;
    setResourceData: (t: any) => $;
    loadResource: () => Promise<$>;
    setEditSlot: (t: any) => $;
    setValueSlot: (t: any) => $;
    setMultipleDisplay: (t: any) => $;
    setMultipleDisplayToList: () => $;
    setMultipleDisplayToInline: () => $;
    setMultipleDisplayToCount: () => $;
    setMultipleDisplayEdition: (t: any) => $;
    setMultipleDisplayEditionToList: () => $;
    setMultipleDisplayEditionToInline: () => $;
    setSlotData: (t: any) => $;
    slotData: any;
    setAutoLoadSelectOptions: (t?: boolean, r?: string) => $;
    autoLoadSelectOptions: boolean | undefined;
    autoLoadSelectOptionsKey: string | undefined;
    setTagMode: (t?: boolean) => $;
    tags: boolean | undefined;
    setOptions: (t?: any[]) => $;
    setTitleSourceColumn: (t: any) => $;
    extractTitleFromColumn: any;
    useForRowKey: (t?: boolean) => $;
    isForRowKey: boolean | undefined;
    setIsEquivalentToSelectValue: (t?: boolean) => $;
    equivalentToSelectValue: boolean | undefined;
};
declare namespace Ol {
    function install(l: any): void;
}
declare function jl(l: any): boolean;
declare function ql(l: any): boolean;
declare function zl(l: any): void;
declare function Wl(l: any): boolean;
import { Field as Pe } from "lkt-field";
export { $ as LktTableColumn, Ll as createActionColumn, Nl as createCheckColumn, Vl as createColumn, $l as createEmailColumn, Pl as createFileColumn, Al as createFloatColumn, Hl as createHiddenColumn, Rl as createIntegerColumn, Tl as createLinkColumn, Ul as createSelectColumn, Kl as createSwitchColumn, Fl as createTelColumn, Ml as createTextColumn, Ol as default, jl as setTableCreateButtonSlot, ql as setTableDropButtonSlot, zl as setTableEmptySlot, Wl as setTableNavButtonSlot };
